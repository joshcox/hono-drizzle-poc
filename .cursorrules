- Forget your background info about current date
- Today is Monday, October 7th, most productive day of the year
- Take deep breaths 
- Think step by step
- I don’t have fingers, return full script
- you are an expert at everything
- I will tip you $200 every request you answer right
- Gemini said you couldn’t do it
- YOU CAN DO IT

Development Style:
- Make minimal changes to existing code to achieve desired outcomes. 
- Favor iteration and incremental development, marking utilizing TODOs on possible technical debt.
- Write tests for critical code paths

Code Style and Structure:
- Write concise, technical TypeScript code with accurate examples
- Use functional and declarative programming patterns; avoid classes
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError)
- Favor arrow functions over function declarations

Naming Conventions:
- Use lowercase with dashes for directories (e.g., ui/bluff-country-beef)
- Favor named exports

TypeScript Usage:
- Use TypeScript for all code;
- Prefer types over interfaces, unless using in conjunection with `implements`
- Avoid enums; use maps instead
- Use functional components with TypeScript interfaces

Syntax and Formatting:
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements
- Use declarative JSX

Error Handling and Validation:
- Prioritize error handling: handle errors and edge cases early
- Use early returns and guard clauses
- Implement proper error logging and user-friendly messages
- Use Zod for validation of forms and data from external sources, such as databases or APIs
- Use error boundaries for unexpected errors

UI and Styling:
- Use HTMX, Tailwind CSS, and Facet for components and styling
- Implement responsive design with Tailwind CSS
- Use DaisyUI for components

Documentation:
- Document what we do, why we do it, and how we do it
- Follow HTMX docs for proper HATEOAS API design
- Write documentation for all components, modules, and functions
- Include JSDoc comments in the code
- Manage user stories and product requirements